## !! Configuration is specific for Firmware V4 or above!! ##

# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

mqtt:
  sensor:  
  
    - name: "ASHP Status"
      state_topic: "Ecodan/ASHP/LWT"
      value_template: "{{ value_json }}"

    - name: "Outside Temperature"
      state_topic: "Ecodan/ASHP/Status/System"
      unit_of_measurement: "Â°C"
      icon: "mdi:thermometer"
      value_template: "{{ value_json.OutsideTemp }}"
    - name: "Heat Pump Power"
      state_topic: "Ecodan/ASHP/Status/System"
      icon: "mdi:lightning-bolt"
      value_template: "{{ value_json.HeaterPower }}"
    - name: "Hot Water Temperature"
      state_topic: "Ecodan/ASHP/Status/HotWater"
      unit_of_measurement: "Â°C"
      icon: "mdi:water-thermometer"
      value_template: "{{ value_json.Temperature }}"
    - name: "Upstairs Temperature"
      state_topic: "Ecodan/ASHP/Status/Zone1"
      unit_of_measurement: "Â°C"
      icon: "mdi:home-thermometer"
      value_template: "{{ value_json.Temperature }}"
    - name: "Downstairs Temperature"
      state_topic: "Ecodan/ASHP/Status/Zone2"
      unit_of_measurement: "Â°C"
      icon: "mdi:home-thermometer"
      value_template: "{{ value_json.Temperature }}"
    - name: "Upstairs Setpoint"
      state_topic: "Ecodan/ASHP/Status/Zone1"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.Setpoint | float(1) }}"
    - name: "Downstairs Setpoint"
      state_topic: "Ecodan/ASHP/Status/Zone2"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.Setpoint | float(1) }}"
    - name: "Heater Return"
      state_topic: "Ecodan/ASHP/Status/System"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.HeaterReturn }}"
    - name: "Heater Flow"
      state_topic: "Ecodan/ASHP/Status/System"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.HeaterFlow }}"
    - name: "Heater Setpoint"
      state_topic: "Ecodan/ASHP/Status/System"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.HeaterSetpoint }}"
    - name: "Compressor"
      state_topic: "Ecodan/ASHP/Status/System"
      unit_of_measurement: "Hz"
      icon: "mdi:sine-wave"
      value_template: "{{ value_json.Compressor }}"
    - name: "Flow Rate"
      state_topic: "Ecodan/ASHP/Status/System"
      unit_of_measurement: "l/min"
      icon: "mdi:waves-arrow-right"
      value_template: "{{ value_json.FlowRate }}"
    - name: "Defrost"
      state_topic: "Ecodan/ASHP/Status/System"
      value_template: "{{ value_json.Defrost }}"
    - name: "Zone1 Flow Setpoint"
      state_topic: "Ecodan/ASHP/Status/Zone1"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.FSP }}"
    - name: "Zone2 Flow Setpoint"
      state_topic: "Ecodan/ASHP/Status/Zone2"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.FSP }}"
    - name: "Zone1 Pump Running"
      state_topic: "Ecodan/ASHP/Status/Zone1"
      value_template: "{{ value_json.PumpRunning }}"
    - name: "Zone2 Pump Running"
      state_topic: "Ecodan/ASHP/Status/Zone2"
      value_template: "{{ value_json.PumpRunning }}"
    - name: "Zone1 Prohibit"
      state_topic: "Ecodan/ASHP/Status/Zone1"
      value_template: "{{ value_json.ProhibitHeating }}"
    - name: "Zone2 Prohibit"
      state_topic: "Ecodan/ASHP/Status/Zone2"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.ProhibitHeating }}"
    - name: "DHW Pump Running"
      state_topic: "Ecodan/ASHP/Status/HotWater"
      value_template: "{{ value_json.PumpRunning }}"
    - name: "Consumed Heat"
      state_topic: "Ecodan/ASHP/Status/Energy"
      unit_of_measurement: "kWh"
      value_template: "{{ value_json.CHEAT }}"
    - name: "Delivered Heat"
      state_topic: "Ecodan/ASHP/Status/Energy"
      unit_of_measurement: "kWh"
      value_template: "{{ value_json.DHEAT }}"
    - name: "Consumed DHW"
      state_topic: "Ecodan/ASHP/Status/Energy"
      unit_of_measurement: "kWh"
      value_template: "{{ value_json.CDHW }}"
    - name: "Delivered DHW"
      state_topic: "Ecodan/ASHP/Status/Energy"
      unit_of_measurement: "kWh"
      value_template: "{{ value_json.DDHW }}"
    - name: "Boiler Flow"
      state_topic: "Ecodan/ASHP/Status/Advanced"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.BoilerFlow }}"
    - name: "Boiler Return"
      state_topic: "Ecodan/ASHP/Status/Advanced"
      unit_of_measurement: "Â°C"
      value_template: "{{ value_json.BoilerReturn }}"
      
    - name: "Ecodan WiFi"
      state_topic: "Ecodan/ASHP/Status/WiFiStatus"
      unit_of_measurement: "dBm"
      value_template: "{{ value_json.RSSI }}"


  climate:
    - unique_id: "ASHP_Zone1"
      name: "Zone1"
      object_id: "zone1_climate"
      current_temperature_topic: "Ecodan/ASHP/Status/Zone1"
      current_temperature_template: "{{ value_json.Temperature }}"
      temperature_command_topic: "Ecodan/ASHP/Command/Zone1/ThermostatSetpoint"
      temperature_unit: C
      max_temp: 30
      min_temp: 10
      temp_step: 0.5
      precision: 0.5
      initial: 10
      temperature_state_topic: "Ecodan/ASHP/Status/Zone1"
      temperature_state_template: "{{ value_json.Setpoint }}"
      mode_state_topic: "Ecodan/ASHP/Status/System"
      # One Zone System:
      mode_state_template: "{{ 'heat' if value_json.SystemOperationMode=='Heating' else 'off' }}"
      # Two Zone Systems:
      #mode_state_template: "{{ 'heat' if (value_json.SystemOperationMode=='Heating' and states('sensor.zone1_pump_running')=='1') else 'off' }}"
      modes: ["heat","off"]
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"
      
    - unique_id: "ASHP_Zone2"
      name: "Zone2"
      object_id: "zone2_climate"
      current_temperature_topic: "Ecodan/ASHP/Status/Zone2"
      current_temperature_template: "{{ value_json.Temperature }}"
      temperature_command_topic: "Ecodan/ASHP/Command/Zone2/ThermostatSetpoint"
      temperature_unit: C
      max_temp: 30
      min_temp: 10
      temp_step: 0.5
      precision: 0.5
      initial: 10
      temperature_state_topic: "Ecodan/ASHP/Status/Zone2"
      temperature_state_template: "{{ value_json.Setpoint }}"
      mode_state_topic: "Ecodan/ASHP/Status/System"
      # One Zone System:
      mode_state_template: "{{ 'heat' if value_json.SystemOperationMode=='Heating' else 'off' }}"
      # Two Zone Systems:
      #mode_state_template: "{{ 'heat' if (value_json.SystemOperationMode=='Heating' and states('sensor.zone2_pump_running')=='1') else 'off' }}"
      modes: ["heat","off"]
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"


        
  number:
    - unique_id: "ashp_dhw_setpoint"
      name: "Hot Water Setpoint"
      state_topic: "Ecodan/ASHP/Status/HotWater"
      value_template: "{{ value_json.Setpoint }}"
      command_topic: Ecodan/ASHP/Command/HotWater/Setpoint
      unit_of_measurement: "Â°C"
      max: 60
      min: 30
      step: 1
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"

    - unique_id: "ashp_z1_flow_setpoint"
      name: "Zone1 Flow Setpoint"
      state_topic: "Ecodan/ASHP/Status/Zone1"
      value_template: "{{ value_json.FSP }}"
      command_topic: Ecodan/ASHP/Command/Zone1/FlowSetpoint
      unit_of_measurement: "Â°C"
      max: 60
      min: 30
      step: 1
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"
          
    - unique_id: "ashp_z2_flow_setpoint"
      name: "Zone2 Flow Setpoint"
      state_topic: "Ecodan/ASHP/Status/Zone2"
      value_template: "{{ value_json.FSP }}"
      command_topic: Ecodan/ASHP/Command/Zone2/FlowSetpoint
      unit_of_measurement: "Â°C"
      max: 60
      min: 30
      step: 1
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"


  select:
      command_topic: "Ecodan/ASHP/Command/System/HeatingMode"
      name: "System Heating Mode"
      state_topic: "Ecodan/ASHP/Status/Zone1"
      value_template: "{{ 'Temperature Control' if value_json.HeatingControlMode=='Temp' else 
			 'Fixed Flow' if value_json.HeatingControlMode=='Flow' else 
			 'Compensation Flow' if value_json.HeatingControlMode=='Compensation' }} "
      options:
        - "Temperature Control"
        - "Fixed Flow"
        - "Compensation Flow"


  switch:
    - name: "Hot Water Boost"
      unique_id: "ashp_dhw"
      state_topic: "Ecodan/ASHP/Status/HotWater"
      value_template: "{{ value_json.HotWaterBoostActive }}"
      icon: "mdi:plus"
      state_on: 1
      state_off: 0
      command_topic: "Ecodan/ASHP/Command/HotWater/Boost"
      payload_on: 1
      payload_off: 0
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"

          
    - unique_id: "ashp_systempower"
      name: "System Power"
      state_topic: "Ecodan/ASHP/Status/System"
      value_template: "{{ value_json.SystemPower }}"
      icon: "mdi:power"
      state_on: "On"
      state_off: "Standby"
      command_topic: "Ecodan/ASHP/Command/System/Power"
      payload_on: "On"
      payload_off: "Standby"
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"


    - unique_id: "ashp_holidaymode"
      name: "Holiday Mode"
      state_topic: "Ecodan/ASHP/Status/System"
      value_template: "{{ value_json.HolidayMode }}"
      icon: "mdi:plus"
      state_on: 1
      state_off: 0
      command_topic: "Ecodan/ASHP/Command/System/HolidayMode"
      payload_on: 1
      payload_off: 0
      availability:
        - topic: "Ecodan/ASHP/LWT"
          template: "{{ value_json }}"
          payload_available: "online"
          payload_not_available: "offline"

    ## NOTE: ENTERS "Server Control Mode", requires to be exited again once run complete  
    #- unique_id: "ashp_ecodhwrun"
    #  name: "Eco Hot Water"
    #  state_topic: "Ecodan/ASHP/Status/System"
    #  value_template: "{{ 1 if (value_json.SystemOperationMode=='Hot Water' and states('sensor.forced_dhw')=='0') else 0 }}"
    #  icon: "mdi:plus"
    #  state_on: 1
    #  state_off: 0
    #  command_topic: "Ecodan/ASHP/Command/System/SvrControlMode"
    #  payload_on: 1
    #  payload_off: 0


template:
  sensor:
    - name: "DHW CoP"
      state: "{% if states('sensor.consumed_dhw')|float == 0 %}
                {{ ('0' | float) }}
              {% else %}
                {{ (states('sensor.delivered_dhw')|float/states('sensor.consumed_dhw')|float)|round(2) }}
              {% endif %}"
    - name: "Heat CoP"
      state: "{% if states('sensor.consumed_heat')|float == 0 %}
                {{ ('0' | float) }}
              {% else %}
                {{ (states('sensor.delivered_heat')|float/states('sensor.consumed_heat')|float)|round(2) }}
              {% endif %}"
    - name: "ASHP Consumed Energy"
      unit_of_measurement: "kWh"
      icon: "mdi:meter-electric-outline"
      state: "{{(states('sensor.consumed_dhw')|float + states('sensor.consumed_heat')|float)|round(2)}}"
    - name: "ASHP Delivered Energy"
      unit_of_measurement: "kWh"
      icon: "mdi:meter-electric-outline"
      state: "{{(states('sensor.delivered_dhw')|float + states('sensor.delivered_heat')|float)|round(2)}}"
    - name: "Flow Return DeltaT"
      unit_of_measurement: "Â°C"
      icon: "mdi:thermometer"
      state: "{{(states('sensor.heater_flow')|float - states('sensor.heater_return')|float)|round(1)}}"
    - name: "Total CoP"
      state: "{{((states('sensor.ashp_delivered_energy')|float / states('sensor.ashp_consumed_energy')|float))|round(2)}}"
    - name: "ASHP Efficiency"
      icon: "mdi:generator-stationary"
      state: "{% if 0 < states('sensor.total_cop')|float < 2 %}Poor
              {% elif 2 < states('sensor.total_cop')|float < 3 %}Average
              {% elif 3 < states('sensor.total_cop')|float < 3.5 %}Good
              {% elif 3.5 < states('sensor.total_cop')|float < 4 %}Very Good
              {% elif states('sensor.total_cop')|float > 4 %}Excellent
              {% else %}Not Available
              {% endif %}"
    - name: "Computed Power Output"
      unique_id: "heatpump_computed_power_output"
      unit_of_measurement: "kW"
      state: >-
        {% set ta = states('sensor.heater_flow') | default(0) | float %}
        {% set tr = states('sensor.heater_return') | default(0) | float %}
        {% set flow = states('sensor.flow_rate') | default(0) | float %}
        {% set freq = states('sensor.compressor') | default(0) | float %}
        {{ 0 if freq == 0 else (flow/60.0 * (ta - tr) * 4.18) | float | round(2) }}
